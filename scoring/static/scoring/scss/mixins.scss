// Usage:   @include transition(width, height 0.3s ease-in-out);
// Output:  -webkit-transition(width 0.2s, height 0.3s ease-in-out);
//          transition(width 0.2s, height 0.3s ease-in-out);
//
// Pass in any number of transitions
@mixin transition($transitions...) {
    $unfoldedTransitions: ();
    @each $transition in $transitions {
        $unfoldedTransitions: append($unfoldedTransitions, unfoldTransition($transition), comma);
    }

    -webkit-transition: $unfoldedTransitions;
    transition: $unfoldedTransitions;
}

@function unfoldTransition ($transition) {
// Default values
$property: all;
$duration: .3s;
$easing: null; // Browser default is ease, which is what we want
$delay: null; // Browser default is 0, which is what we want
$defaultProperties: ($property, $duration, $easing, $delay);

// Grab transition properties if they exist
$unfoldedTransition: ();
@for $i from 1 through length($defaultProperties) {
    $p: null;
    @if $i <= length($transition) {
    $p: nth($transition, $i)
    } @else {
    $p: nth($defaultProperties, $i)
    }
    $unfoldedTransition: append($unfoldedTransition, $p);
}

@return $unfoldedTransition;
}

//Mixin Responsive
//usage @include responsive(font-size, 30, 40);
$min-viewport: 350;
$max-viewport: 1792;

@mixin responsive($property, $property-min, $property-max) {
    #{$property}: calc(#{$property-min}px + (#{$property-max} - #{$property-min}) * ( (100vw - #{$min-viewport}px) / (#{$max-viewport} - #{$min-viewport}) )) !important;
}

// Scorecard Table
@mixin progress-bar-header($color) {
    .score-bar {
        border-color: $color;
        font-weight: 600;
        .progress-bar {
            background-color: mix($color, $white, 10%);
        }
    }
}

@mixin progress-bar-body($color) {
    span {
        opacity: 0.8;
        @include responsive(font-size, 13, 14);
    }
    .score-bar {
        border-color: $color;
        .progress-bar {
            background-color: mix($color, $white, 10%);
        }
    }
}

// Bootstrap 4 backwards compatability mixins

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active() {
    &:hover,
    &:focus,
    &:active {
        @content;
    }
}
